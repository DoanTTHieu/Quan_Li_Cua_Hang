<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAddbill.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA7BJREFUaEPt
        WU1o1EAUXv9Qb551k2y1IPgDYgVB/Ad/0ZsKHhTxIOIf3jwoUhQvHjwU7WZmKxUVqQUP1iIeFFFEUfCq
        B1FBoSi6mWztj3WL8XvZl22aZemuzTYp3Q8eO+9N3sx7m/fNTJJEHVMJuswu1UzrKIluZpeweXLBMNU5
        XahhyCeWPOQ0d08O6Ka9xU1C2vvYlMBd2U82Q6hNbIoGSWEtN6Q6rAv7SFAMYV9CkKeKNlM9gX6f/FJp
        lWpoUwa1YX8A++MRX3Wq4OvpI0JzaWlrGfmFBsO0dmJSKo2PZcSC/PbbNGGdJV8Ef9IQ1onCOG65+f3I
        h3z9Nr/kk2Z2O/mGAt20pC6sDlZLgAmbNamesloxyId8WS0B5r2LeQWr4wf+1XYSVkugS3UeAT1jtWKQ
        D/myWoKx5q0awQE1aR0zMnYDCbV1ae1CUEOaUPfw21mJ8LVDhrR2BMfjaWqfCNW83mov1IS9CO3jZEOZ
        HKIyqEpMdbDceISaJ5Jq/zyHm6HDP3bNE9FM+xX+va2shgZN5rZh6X3Jav2OlEVwQI+crIaGyMjOamio
        k71SBAec8mRvaO1djP2jA8G+M6R9J9mWa+SuImJPdpyCNyKBPuzm3cQDnKMeof1Lz9hNfEn8yZ6UagPu
        xCCkt3gXmp3phUOheuvqQKzJrplqPYLtw0NWmsoJ7W/eY29KqhXQnVS7mudeDMSS7FrGWkflgwPi1YTj
        TEt0OjP8yeBJcg/aA7g7M93r40h2lNFaSgLH9BY3CUZjizMb9m5ID8bM0hMid7mIFdnRtxmB9uNEfJFN
        o2Bc612DBAYx5m3iCpvjRfZiEkJdYNMooCxXoV9BbviTIMSG7EmRW40AB1DnGTaNAr1MQP93Wq08XgQR
        C7LjmucI1Ib0o3RWstlFMQk8HZZLIhZkd1chLKX0dpE2OyT6MJn+uYD6fOV0k1Yu16EMIic7VqnLWKFe
        u23TPoOgP0D6dZk7wEncGiuJ6MmOUkGgPX6iEnRpvQDpB+hFQ5NwZrG5LCInO0ppN4LNawhCu/5jfuGO
        2O+R3F/YuypJwkOkZEciXSirYZQXDoU2vbj+QstvtQ9fkZMdgb8xhPpDy6qbYGB/qAbRkh0kTl75Ope1
        /0asdvbxIHKyh4lIyR4W6i/oKkVwQI/sfnKGbSPUPBGP7H5yhm0j1DyRiUL4iRS+Z5T99FYrYKPtxLwm
        q+OH72MofbicSMnTSsZhhAP6PI2lce9ESuifp+uoo47JjkTiH0Jb9gAmvrWpAAAAAElFTkSuQmCC
</value>
  </data>
</root>